---
import clsx from "clsx";
import { Image } from "astro:assets";
import type { ComponentProps } from "astro/types";

type AstroImage = ComponentProps<typeof Image>["src"];

interface Props {
  title: string;
  url?: string | undefined;
  icon?: AstroImage | undefined;
  image?: AstroImage | undefined;
  badge?: string | undefined;
  date?: string | undefined;
  description?: string | undefined;
  type: "blog" | "benefit";
  isFeatured?: boolean | undefined;
}

const {
  title,
  url,
  icon,
  image,
  badge = "GUIDE",
  date,
  type,
  isFeatured,
} = Astro.props;
---

<div
  class={clsx("card-container", `${type}-card`, {
    "card-isFeatured": isFeatured,
  })}
>
  {
    url ? (
      <a href={url} class="card-link">
        {type === "blog" ? (
          <>
            {typeof image === "string" ? (
              <div class="card-image">
                <img
                  src={image}
                  alt={title}
                  width={1239}
                  height={720}
                  loading="lazy"
                  class="image"
                />
              </div>
            ) : (
              !!image && (
                <div class="card-image">
                  <Image
                    src={image}
                    alt={title}
                    width={1239}
                    height={720}
                    loading="lazy"
                    class="image"
                  />
                </div>
              )
            )}
            <div class="card-content">
              <h3 class="card-title">{title}</h3>
              {Astro.slots.has("default") && (
                <p class="card-body">
                  <slot />
                </p>
              )}
              <div class="card-meta-row">
                <span class="card-label">{badge}</span>
                {date && <span class="card-date">{date}</span>}
              </div>
            </div>
          </>
        ) : (
          <div class="card-content">
            {icon && (
              <div class="card-icon">
                {typeof icon === "string" ? (
                  <img
                    src={icon}
                    alt={title + " icon"}
                    width="48"
                    height="48"
                  />
                ) : (
                  <Image
                    src={icon}
                    alt={title + " icon"}
                    width="48"
                    height="48"
                  />
                )}
              </div>
            )}
            <h3 class="card-title">{title}</h3>
            {Astro.slots.has("default") && (
              <p class="card-body">
                <slot />
              </p>
            )}
          </div>
        )}
      </a>
    ) : type === "blog" ? (
      <>
        {typeof image === "string" ? (
          <div class="card-image">
            <img
              src={image}
              alt={title}
              width={1239}
              height={720}
              loading="lazy"
              class="image"
            />
          </div>
        ) : (
          !!image && (
            <div class="card-image">
              <Image
                src={image}
                alt={title}
                width={1239}
                height={720}
                loading="lazy"
                class="image"
              />
            </div>
          )
        )}
        <div class="card-content">
          <h3 class="card-title">{title}</h3>
          {Astro.slots.has("default") && (
            <p class="card-body">
              <slot />
            </p>
          )}
          <div class="card-meta-row">
            <span class="card-label">{badge}</span>
            {date && <span class="card-date">{date}</span>}
          </div>
        </div>
      </>
    ) : (
      <div class="card-content">
        {icon && (
          <div class="card-icon">
            {typeof icon === "string" ? (
              <img
                src={`/${icon}`}
                alt={title + " icon"}
                width="48"
                height="48"
              />
            ) : (
              <Image
                src={`/${icon}`}
                alt={title + " icon"}
                width="48"
                height="48"
              />
            )}
          </div>
        )}
        <h3 class="card-title">{title}</h3>
        {Astro.slots.has("default") && (
          <p class="card-body">
            <slot />
          </p>
        )}
      </div>
    )
  }
  <div class="card-gradient"></div>
</div>
<style>
  .card-container {
    display: flex;
    flex-direction: column;
    background: var(--color-accent-1000);
    border-radius: 1rem;
    overflow: hidden;
    color: var(--color-neutral-0);
    text-decoration: none;
    transition: transform 0.2s ease-in-out;
    height: 100%;
    position: relative;
    padding-bottom: 1rem;
    flex: 1;
  }
  .card-container:hover {
    transform: scale(0.98);
  }
  .card-link {
    color: inherit;
    text-decoration: none;
    display: flex;
    flex-direction: column;
  }
  .card-content {
    grid-column-gap: 2rem;
    flex-flow: column;
    justify-content: center;
    align-items: flex-start;
    padding: 2.5rem 1.5rem;
    display: flex;
    width: 100%;
  }
  .card-title {
    font-size: 1.125rem;
    font-weight: 700;
    margin-bottom: 0.75rem;
    line-height: 1.2;
  }
  .card-body {
    font-size: 0.875rem;
    margin-bottom: 0.5rem;
    color: var(--color-neutral-1000);
    flex: 1 1 auto;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    width: 100%;
  }
  .card-meta-row {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    margin-top: auto;
  }
  .card-label {
    font-size: 0.6rem;
    color: var(--color-neutral-0);
    background: var(--color-accent-1100);
    border-radius: 0.25rem;
    padding: 0.3rem 0.4rem;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-weight: 400;
    margin-right: 0.75rem;
  }
  .card-date {
    font-size: 0.7rem;
    color: var(--color-neutral-1000);
    font-weight: 500;
  }
  .card-image {
    border-radius: 1rem;
    object-fit: cover;
    overflow-clip-margin: content-box;
    overflow: clip;
    line-height: 0;
  }
  .card-image .image {
    max-width: 100%;
    min-height: 15rem;
  }
  .card-icon {
    margin-bottom: 1.5rem;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .card-gradient {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    width: 110%;
    height: 3px;
    background: linear-gradient(
      90deg,
      var(--color-primary-1000),
      var(--color-box-shadow-yellow),
      var(--color-primary-1000)
    );
    background-size: 200% 100%;
    animation: gradient-border 6s linear infinite;
    border-bottom-left-radius: 1rem;
    border-bottom-right-radius: 1rem;
    pointer-events: none;
  }
  @keyframes gradient-border {
    0% {
      background-position-x: 0%;
    }
    100% {
      background-position-x: -100%;
    }
  }
  /* Benefit card specific styles */
  .benefit-card {
    background: var(--color-neutral-900);
    border-radius: 0.5rem;
    padding: 1.5rem 1rem 1rem 1.5rem;
    text-align: left;
    align-items: flex-start;
    justify-content: flex-start;
  }
  .benefit-card .card-content {
    padding: 0;
  }
  .benefit-card .card-title {
    font-size: 1.5rem;
    font-weight: 400;
    line-height: 1.2;
    margin-bottom: 1rem;
    color: var(--color-neutral-0);
    font-family: inherit;
  }
  .benefit-card .card-body {
    color: var(--color-neutral-1000);
    font-weight: 400;
    line-height: 1.5;
    margin-bottom: 1rem;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  .benefit-card .card-gradient {
    border-bottom-left-radius: 0.625rem;
    border-bottom-right-radius: 0.625rem;
  }
  @media (max-width: 1200px) {
    .benefit-card {
      width: 100% !important;
      flex: 1 !important;
    }
  }
  @media (min-width: 768px) {
    /* Featured cards */
    .card-isFeatured {
      padding: 0;
    }
    .card-isFeatured .card-gradient {
      display: none;
    }
    .card-isFeatured .card-link {
      flex-direction: row;
    }
    .card-isFeatured .card-image {
      order: 2;
      flex: 0 0 50%;
    }
    .card-isFeatured .card-content {
      order: 1;
      flex: 1;
    }
    .card-isFeatured .card-title {
      font-size: 1.8rem;
    }
    .card-isFeatured .card-body {
      font-size: 1.15rem;
    }
    .card-isFeatured .card-label {
      font-size: 0.75rem;
      padding: 0.625rem;
    }
    .card-isFeatured .card-date {
      font-size: 0.875rem;
    }
  }

  @media (min-width: 1200px) {
    .card-isFeatured .card-image {
      flex: 0 0 calc((7 / 12) * 100%);
    }
  }
</style>
