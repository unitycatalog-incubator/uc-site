---
import clsx from "clsx";

/**
 * Interactive button
 */
interface Props {
  /** Button label/contents */
  children: unknown;
  /** URL to link to - if set, this will configure the button as a link */
  href?: string | undefined;
  /** Button color */
  color?: "primary" | "secondary" | "tertiary" | undefined;
  /** Specify HTML button type */
  type?: "button" | "submit" | undefined;
  /** Whether the button should be full width or not */
  isFullWidth?: boolean | undefined;
  /** Additional HTML classname to add */
  className?: string | undefined;
}

const { type, href, color = "primary", isFullWidth, className } = Astro.props;

const cx = clsx(
  "appearance-none min-h-[50px] text-lg py-3 px-7 font-medium justify-center items-center rounded-md text-neutral-950 cursor-pointer transition-colors",
  {
    "flex w-full": isFullWidth,
    "inline-flex": !isFullWidth,
    "bg-box-shadow-yellow hover:bg-secondary-700": color === "primary",
    "bg-neutral-50 hover:bg-neutral-200": color === "secondary",
    "text-white bg-primary-1000 hover:bg-primary-700": color === "tertiary",
  },
  className,
);
---

{
  href ? (
    <a href={href} class={cx}>
      <slot />
    </a>
  ) : (
    <button type={type} class={cx}>
      <slot />
    </button>
  )
}
