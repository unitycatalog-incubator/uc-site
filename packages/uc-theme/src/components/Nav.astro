---
import type { MenuItem } from "../types";
import Button from "./Button.astro";

interface NavButton {
  label: string;
  url: string;
  style: string; // e.g., 'github', 'slack', 'linkedin'
}

interface Props {
  items: MenuItem[];
  logo?: SVGElement;
  buttons?: NavButton[];
}

const { items, logo, buttons = [] } = Astro.props;
---

<nav class="navbar" x-data="{ open: false }">
  <div class="navbar-content">
    <div class="nav-left">
      {logo ? logo : <slot name="logo" />}
    </div>
    <div class="nav-center">
      {
        items.map((item) => (
          <a class="nav-link" href={item.url}>
            {item.label}
          </a>
        ))
      }
    </div>
    <div class="nav-right">
      {
        buttons.length > 0 ? (
          buttons.map((btn) => (
            <Button
              label={btn.label}
              url={btn.url}
              style={btn.style}
              size="many"
            />
          ))
        ) : (
          <slot name="buttons" />
        )
      }
    </div>
    <button class="nav-hamburger" aria-label="Open menu" @click="open = true">
      <span></span>
      <span></span>
      <span></span>
    </button>
  </div>

  <!-- Mobile Menu Overlay -->
  <div
    class="nav-mobile-menu"
    x-show="open"
    x-transition:enter="transition ease-out duration-200"
    x-transition:enter-start="opacity-0 translate-y-4"
    x-transition:enter-end="opacity-100 translate-y-0"
    x-transition:leave="transition ease-in duration-150"
    x-transition:leave-start="opacity-100 translate-y-0"
    x-transition:leave-end="opacity-0 translate-y-4"
    x-cloak
    @keydown.escape.window="open = false"
    @click.away="open = false"
  >
    <div class="nav-mobile-header">
      {logo ? logo : <slot name="logo" />}
      <button
        class="nav-mobile-close"
        aria-label="Close menu"
        @click="open = false">&times;</button
      >
    </div>
    <div class="nav-mobile-links">
      {
        items.map((item) => (
          <a class="nav-mobile-link" href={item.url} @click="open = false">
            {item.label}
          </a>
        ))
      }
    </div>
    <div class="nav-mobile-ctas">
      {
        buttons.length > 0 &&
          buttons.map((btn) => (
            <Button
              label={btn.label}
              url={btn.url}
              style={btn.style}
              fullWidth={true}
              size="many"
            />
          ))
      }
    </div>
  </div>
</nav>

<!-- Alpine.js for Astro -->
<script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer
></script>

<style>
  /* Base Navbar */
  .navbar {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    width: 100%;
    background: var(--color-neutral-950);
    z-index: 10;
  }

  .navbar-content {
    max-width: 100rem;
    margin-left: auto;
    margin-right: auto;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.75rem 2rem;
    min-height: 5rem;
  }

  /* Navigation Sections */
  .nav-left {
    display: flex;
    align-items: center;
  }

  .nav-center {
    display: flex;
    gap: 2rem;
    flex: 1;
    padding-left: 2rem;
    justify-content: left;
    font-family: var(--font-display);
  }

  .nav-right {
    display: flex;
    gap: 1rem;
    flex: 1 1 1;
    justify-content: flex-end;
  }

  /* Navigation Links */
  .nav-link {
    color: var(--color-neutral-0);
    text-decoration: none;
    font-weight: 500;
    font-size: 1.1rem;
    transition: color 0.2s;
  }

  .nav-link:hover {
    color: var(--color-secondary-700);
  }

  /* Hamburger Menu */
  .nav-hamburger {
    display: none;
    flex-direction: column;
    justify-content: center;
    gap: 6px;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0 0.5rem;
  }

  .nav-hamburger span {
    display: block;
    width: 32px;
    height: 4px;
    background: #fff;
    border-radius: 2px;
  }

  /* Mobile Menu */
  .nav-mobile-menu {
    display: none;
  }

  [x-cloak] {
    display: none !important;
  }

  /* Mobile Menu Styles */
  @media (max-width: 1300px) {
    .nav-center,
    .nav-right {
      display: none;
    }

    .nav-hamburger {
      display: flex;
    }

    .navbar {
      padding: 0.75rem 1.5rem;
    }

    .nav-mobile-menu[x-show="open"] {
      display: flex;
      flex-direction: column;
      position: fixed;
      inset: 0;
      background: var(--color-neutral-950);
      z-index: 100;
      padding: 2rem 1rem 1rem 1rem;
      overflow-y: auto;
      animation: fadeIn 0.2s;
    }

    .nav-mobile-header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-bottom: 2rem;
      border-bottom: 1px solid var(--color-neutral-700);
      padding-bottom: 1rem;
    }

    .nav-mobile-close {
      background: none;
      border: none;
      color: var(--color-neutral-0);
      font-size: 2.5rem;
      cursor: pointer;
      line-height: 1;
      padding: 0 0.5rem;
    }

    .nav-mobile-links {
      display: flex;
      flex-direction: column;
      gap: 2rem;
      margin-bottom: 2rem;
      font-family: var(--font-display);
    }

    .nav-mobile-link {
      color: var(--color-neutral-0);
      text-decoration: none;
      font-size: 1.5rem;
      font-weight: 500;
      transition: color 0.2s;
    }

    .nav-mobile-link:hover {
      color: var(--color-secondary-700);
    }

    .nav-mobile-ctas {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
</style>
